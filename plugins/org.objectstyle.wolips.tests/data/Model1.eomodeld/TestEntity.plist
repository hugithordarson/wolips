{
    attributes = (
        {
            adaptorValueConversionMethodName = archiveData; 
            allowsNull = Y; 
            columnName = ""; 
            name = Test; 
            valueClassName = TestClass; 
            valueFactoryMethodName = "objectWithArchiveData:"; 
        }, 
        {columnName = ColumnName; name = id; prototypeName = id; }, 
        {
            adaptorValueConversionMethodName = archiveData; 
            columnName = Name; 
            name = name; 
            prototypeName = varchar1000; 
            valueFactoryMethodName = "objectWithArchiveData:"; 
        }
    ); 
    attributesUsedForLocking = (id, name, Test); 
    className = TestEntity; 
    classProperties = (name, subEntities, Test); 
    externalName = TestEntity; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {"_clientClassPropertyNames" = (name, subEntities, id); }; 
    name = TestEntity; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            deleteRule = EODeleteRuleCascade; 
            destination = SubEntity; 
            internalInfo = {"_nameInObjectStore" = Relationship; }; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = testEntityID; sourceAttribute = id; }); 
            name = subEntities; 
            ownsDestination = Y; 
        }
    ); 
}
